{"version":3,"sources":["api/api.ts","store/selectors.ts","store/index.ts","components/Users.tsx","components/User.tsx","components/EditUser.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getAllUsers","a","fetch","response","json","getUser","id","delUser","method","first_name","last_name","birth_date","gender","job","biography","is_active","headers","body","JSON","stringify","ok","Error","status","statusText","ActionType","getUsersSelector","state","users","getCurrentUserSelector","currentUser","getModeSelector","mode","initialState","undefined","setMode","createAction","SET_MODE","loadUsers","createAsyncThunk","SET_ALL_USERS","usersFromServer","loadUser","SET_CURRENT_USER","currentId","userFromServer","reducer","createReducer","builder","addCase","fulfilled","action","payload","store","configureStore","Transition","React","forwardRef","props","ref","Slide","direction","Users","useState","isError","setIsError","dispatch","useDispatch","navigate","useNavigate","currentUsers","useSelector","deleteUser","useEffect","className","length","TableContainer","component","Paper","Table","sx","minWidth","size","aria-label","TableHead","TableRow","border","TableCell","align","TableBody","map","item","scope","Button","mr","variant","onClick","m","ml","Dialog","open","TransitionComponent","keepMounted","onClose","aria-describedby","DialogTitle","label","inputProps","User","isId","setIsId","console","log","Checkbox","checked","disabled","Stack","width","spacing","Alert","severity","EditUser","Date","value","setValue","sex","setSex","isErrorSex","setIsErrorSex","firstName","setFirstName","isErrorFirstName","setIsErrorFirstName","lastName","setLastName","isErrorLastName","setIsErrorLastName","setJob","isErrorJob","setIsErrorJob","setBiography","isErrorBiography","setIsErrorBiography","isActive","setIsActive","isErrorForm","setIsErrorForm","isCreatedUser","setIsCreatedUser","isEditedUser","setIsEditedUser","currentMode","transformDate","stateDate","getFullYear","getMonth","getDay","userForEdit","Box","noValidate","autoComplete","onSubmit","event","preventDefault","createUser","TextField","error","required","placeholder","helperText","maxLength","onChange","name","target","test","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","disableFuture","mask","inputFormat","openTo","views","newValue","renderInput","params","FormControl","InputLabel","Select","labelId","MenuItem","multiline","rows","FormControlLabel","control","type","updateUser","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4761d0ae.chunk.js","sourcesContent":["export const BASE_URL = 'https://frontend-candidate.dev.sdh.com.ua/v1/contact/';\n\nexport async function getAllUsers() {\n  try {\n    const response = await fetch(`${BASE_URL}`);\n\n    return response.json();\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function getUser(id: number | undefined) {\n  try {\n    const response = await fetch(`${BASE_URL}${id}`);\n\n    return response.json();\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function delUser(id : number) {\n  try {\n    const response = await fetch(`${BASE_URL}${id}`, { method: 'DELETE' });\n\n    return response;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function createUser(\n  first_name: string,\n  last_name: string,\n  birth_date: string,\n  gender: string,\n  job: string,\n  biography: string,\n  is_active: boolean,\n) {\n  const response = await fetch(`${BASE_URL}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      first_name,\n      last_name,\n      birth_date,\n      gender,\n      job,\n      biography,\n      is_active,\n    }),\n  });\n\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  return response;\n}\n\nexport async function updateUser(\n  id: number | undefined,\n  first_name: string,\n  last_name: string,\n  birth_date: string,\n  gender: string,\n  job: string,\n  biography: string,\n  is_active: boolean,\n) {\n  const response = await fetch(`${BASE_URL}${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      first_name,\n      last_name,\n      birth_date,\n      gender,\n      job,\n      biography,\n      is_active,\n    }),\n  });\n\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  return response;\n}\n","// eslint-disable-next-line import/extensions, import/no-unresolved\nimport { RootState } from '../react-app-env';\n\nexport const getUsersSelector = (state: RootState) => state.users;\nexport const getCurrentUserSelector = (state: RootState) => state.currentUser;\nexport const getModeSelector = (state: RootState) => state.mode;\n","import {\n  configureStore,\n  createReducer,\n  createAsyncThunk,\n  createAction,\n} from '@reduxjs/toolkit';\n\nimport { getAllUsers, getUser } from '../api/api';\n// eslint-disable-next-line import/extensions, import/no-unresolved\nimport { RootState } from '../react-app-env';\n// import { RootState } from '../react-app-env';\n// eslint-disable-next-line no-shadow\nexport enum ActionType {\n  SET_ALL_USERS = 'SET_ALL_USERS',\n  SET_CURRENT_USER = 'SET_CURRENT_USER',\n  SET_MODE = 'SET_MODE',\n}\n\n// Initial state\nconst initialState: RootState = {\n  users: [],\n  currentUser: undefined,\n  mode: true,\n};\n\nexport const setMode = createAction<boolean>(ActionType.SET_MODE);\n\nexport const loadUsers = createAsyncThunk(ActionType.SET_ALL_USERS, async () => {\n  const usersFromServer = await getAllUsers();\n\n  return usersFromServer;\n});\n\nexport const loadUser = createAsyncThunk(ActionType.SET_CURRENT_USER,\n  async (currentId: number | undefined) => {\n    const userFromServer = await getUser(currentId);\n\n    return userFromServer;\n  });\n\n// rootReducer - this function is called after dispatching an action\nconst reducer = createReducer(initialState, (builder) => {\n  builder.addCase(loadUsers.fulfilled, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.users = action.payload;\n  });\n\n  builder.addCase(loadUser.fulfilled, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.currentUser = action.payload;\n  });\n\n  builder.addCase(setMode, (state, action) => {\n    // eslint-disable-next-line no-param-reassign\n    state.mode = action.payload;\n  });\n});\n\nexport const store = configureStore({\n  reducer,\n});\n// type of dispath, dispatch can get async function\nexport type AppDispatch = typeof store.dispatch;\n","import './Users.scss';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from '@mui/material/Table';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Slide from '@mui/material/Slide';\nimport { TransitionProps } from '@mui/material/transitions';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport DeleteRoundedIcon from '@mui/icons-material/DeleteRounded';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport FaceIcon from '@mui/icons-material/Face';\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\nimport Paper from '@mui/material/Paper';\nimport { Button } from '@mui/material';\nimport { delUser } from '../api/api';\nimport { getUsersSelector } from '../store/selectors';\nimport { loadUsers, AppDispatch, loadUser } from '../store';\n\nconst Transition = React.forwardRef((\n  props: TransitionProps & {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>,\n) => {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport function Users() {\n  const [isError, setIsError] = useState('');\n  const dispatch: AppDispatch = useDispatch();\n  const navigate = useNavigate();\n  const currentUsers = useSelector(getUsersSelector);\n\n  const deleteUser = async (id: number) => {\n    try {\n      if (id) {\n        await delUser(id);\n        dispatch(loadUsers());\n      }\n    } catch (error) {\n      setIsError(`${error}`);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(loadUsers());\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"Title\">Users</h1>\n      <h3>{currentUsers.length === 0 ? 'Database is empty' : `In database remains ${currentUsers.length} user/s`}</h3>\n      <TableContainer\n        component={Paper}\n      >\n        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow sx={{ 'td, th': { border: 1 } }}>\n              <TableCell align=\"center\">Full Name</TableCell>\n              <TableCell align=\"center\">First Name</TableCell>\n              <TableCell align=\"center\">Last Name</TableCell>\n              <TableCell align=\"center\">BirthDate</TableCell>\n              <TableCell align=\"center\">Gender</TableCell>\n              <TableCell align=\"center\">Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {currentUsers.map((item) => (\n              <TableRow\n                key={item.id}\n                sx={{ 'td, th': { border: 1 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  <Button\n                    sx={{ mr: '20px' }}\n                    variant=\"outlined\"\n                    onClick={() => {\n                      if (item.id) {\n                        dispatch(loadUser(item.id));\n                        navigate('/user');\n                      }\n                    }}\n                  >\n                    <FaceIcon />\n                  </Button>\n                  {`${item.first_name} ${item.last_name}`}\n                </TableCell>\n                <TableCell align=\"center\">{item.first_name}</TableCell>\n                <TableCell align=\"center\">{item.last_name}</TableCell>\n                <TableCell align=\"center\">{item.birth_date}</TableCell>\n                <TableCell align=\"center\">{item.gender}</TableCell>\n                <TableCell align=\"center\">\n                  <Button\n                    variant=\"outlined\"\n                    onClick={() => {\n                      if (item.id) {\n                        deleteUser(item.id);\n                      }\n                    }}\n                  >\n                    <DeleteRoundedIcon />\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Button\n          sx={{ m: '10px 20px' }}\n          variant=\"outlined\"\n          onClick={() => {\n            navigate('/addedituser');\n          }}\n        >\n          Add User\n          <AddCircleOutlineOutlinedIcon sx={{ ml: '10px' }} />\n        </Button>\n      </TableContainer>\n      <div>\n        <Dialog\n          open={isError.length > 0}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={() => {\n            setIsError('');\n          }}\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <DialogTitle>{isError}</DialogTitle>\n        </Dialog>\n      </div>\n    </>\n  );\n}\n","import './User.scss';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport DeleteRoundedIcon from '@mui/icons-material/DeleteRounded';\nimport TableContainer from '@mui/material/TableContainer';\nimport Checkbox from '@mui/material/Checkbox';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport AddCircleOutlineOutlinedIcon from '@mui/icons-material/AddCircleOutlineOutlined';\nimport Paper from '@mui/material/Paper';\nimport { Button } from '@mui/material';\nimport { delUser } from '../api/api';\nimport { getCurrentUserSelector } from '../store/selectors';\nimport {\n  AppDispatch,\n  loadUsers,\n  setMode,\n} from '../store';\n\nconst label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n\nexport function User() {\n  const navigate = useNavigate();\n  const [isId, setIsId] = useState(false);\n  const dispatch: AppDispatch = useDispatch();\n\n  const deleteUser = async (id: number) => {\n    try {\n      if (id) {\n        await delUser(id);\n\n        dispatch(loadUsers());\n        setIsId(false);\n      }\n\n      setIsId(true);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  };\n\n  const currentUser = useSelector(getCurrentUserSelector);\n\n  return (\n    <>\n      <h1 className=\"Title\">User</h1>\n      <TableContainer\n        component={Paper}\n      >\n        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow sx={{ 'td, th': { border: 1 } }}>\n              <TableCell align=\"center\">first_name</TableCell>\n              <TableCell align=\"center\">last_name</TableCell>\n              <TableCell align=\"center\">birth_date</TableCell>\n              <TableCell align=\"center\">gender</TableCell>\n              <TableCell align=\"center\">job</TableCell>\n              <TableCell align=\"center\">biography</TableCell>\n              <TableCell align=\"center\">is_active</TableCell>\n              <TableCell align=\"center\">edit</TableCell>\n              <TableCell align=\"center\">delete</TableCell>\n            </TableRow>\n          </TableHead>\n          { currentUser?.id\n            && (\n              <TableBody>\n                <TableRow\n                  sx={{ 'td, th': { border: 1 } }}\n                >\n                  <TableCell align=\"center\" component=\"th\" scope=\"column\">\n                    {currentUser.first_name}\n                  </TableCell>\n                  <TableCell align=\"center\">{ currentUser.last_name}</TableCell>\n                  <TableCell align=\"center\">{ currentUser.birth_date}</TableCell>\n                  <TableCell align=\"center\">{ currentUser.gender}</TableCell>\n                  <TableCell align=\"center\">{ currentUser.job}</TableCell>\n                  <TableCell align=\"center\">{ currentUser.biography}</TableCell>\n                  <TableCell align=\"center\"><Checkbox {...label} checked={currentUser.is_active} /></TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"outlined\"\n                      disabled={isId}\n                      onClick={() => {\n                        dispatch(setMode(false));\n                        navigate('/addedituser');\n                      }}\n                    >\n                      <ModeEditIcon />\n                    </Button>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    <Button\n                      variant=\"outlined\"\n                      disabled={isId}\n                      onClick={() => {\n                        if (currentUser.id) {\n                          deleteUser(currentUser.id);\n                          setIsId(false);\n                        } else {\n                          setIsId(true);\n                        }\n                      }}\n                    >\n                      <DeleteRoundedIcon />\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            )}\n        </Table>\n        <Button\n          sx={{ m: '10px 20px' }}\n          variant=\"outlined\"\n          onClick={() => {\n            dispatch(setMode(true));\n            navigate('/addedituser');\n          }}\n        >\n          Add User\n          <AddCircleOutlineOutlinedIcon sx={{ ml: '10px' }} />\n        </Button>\n      </TableContainer>\n      {isId && (\n        <Stack className=\"message\" sx={{ width: '100%' }} spacing={2}>\n          <Alert variant=\"filled\" severity=\"error\">\n            User was deleted successfully!\n          </Alert>\n        </Stack>\n      )}\n    </>\n  );\n}\n","import './EditUser.scss';\nimport React, { useEffect, useState } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport Stack from '@mui/material/Stack';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Button from '@mui/material/Button';\nimport { useSelector } from 'react-redux';\nimport { Alert, FormControlLabel } from '@mui/material';\n// eslint-disable-next-line import/extensions, import/no-unresolved\nimport { createUser, updateUser } from '../api/api';\nimport { getCurrentUserSelector, getModeSelector } from '../store/selectors';\n\nconst label = {\n  inputProps: { 'aria-label': 'Checkbox demo' },\n  label: 'IsActive',\n};\n\nexport function EditUser() {\n  const [value, setValue] = React.useState<Date | null>(new Date());\n  const [sex, setSex] = React.useState('');\n  const [isErrorSex, setIsErrorSex] = useState(false);\n  const [firstName, setFirstName] = React.useState('');\n  const [isErrorFirstName, setIsErrorFirstName] = useState(false);\n  const [lastName, setLastName] = React.useState('');\n  const [isErrorLastName, setIsErrorLastName] = useState(false);\n  const [job, setJob] = React.useState('');\n  const [isErrorJob, setIsErrorJob] = useState(false);\n  const [biography, setBiography] = React.useState('');\n  const [isErrorBiography, setIsErrorBiography] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const [isErrorForm, setIsErrorForm] = useState(false);\n  const [isCreatedUser, setIsCreatedUser] = useState(false);\n  const [isEditedUser, setIsEditedUser] = useState(false);\n\n  // const [isEditUser, setIsEditUser] = useState(false);\n  const currentMode = useSelector(getModeSelector);\n\n  const transformDate = (stateDate: Date | null): string => {\n    const date = `${stateDate?.getFullYear()}-${stateDate?.getMonth()}-${stateDate?.getDay()}`;\n\n    return date;\n  };\n\n  const handleChangeFirstName = (name: string) => {\n    if ((/^[a-zA-z\\s]*$/g).test(name)) {\n      setFirstName(name);\n      setIsErrorFirstName(false);\n    } else {\n      setIsErrorFirstName(true);\n    }\n  };\n\n  const handleChangeLastName = (name: string) => {\n    if ((/^[a-zA-z\\s]*$/g).test(name)) {\n      setLastName(name);\n      setIsErrorLastName(false);\n    } else {\n      setIsErrorLastName(true);\n    }\n  };\n\n  const handleChangeGender = (event: SelectChangeEvent) => {\n    if (event.target.value) {\n      setSex(event.target.value as string);\n      setIsErrorSex(false);\n    } else {\n      setIsErrorSex(true);\n    }\n  };\n\n  const handleChangeJob = (name: string) => {\n    if ((/^[\\w \"\"\\d]*$/g).test(name)) {\n      setJob(name);\n      setIsErrorJob(false);\n    } else {\n      setIsErrorJob(true);\n    }\n  };\n\n  const handleChangeBiography = (name: string) => {\n    if ((/^[\\w().,!?\"\"'' \\d]*$/g).test(name)) {\n      setBiography(name);\n      setIsErrorBiography(false);\n    } else {\n      setIsErrorBiography(true);\n    }\n  };\n\n  const userForEdit = useSelector(getCurrentUserSelector);\n\n  const handlerForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (firstName && lastName && sex && transformDate(value) && job && biography) {\n      createUser(firstName, lastName, transformDate(value), sex, job, biography, isActive);\n      setIsErrorForm(false);\n      setIsCreatedUser(true);\n      setSex('');\n      setFirstName('');\n      setLastName('');\n      setJob('');\n      setBiography('');\n      setIsActive(false);\n    } else {\n      setIsErrorForm(true);\n      setIsCreatedUser(false);\n    }\n  };\n\n  useEffect(() => {\n    if (userForEdit && !currentMode) {\n      setFirstName(userForEdit.first_name);\n      setLastName(userForEdit.last_name);\n      setSex(userForEdit.gender);\n      setValue(new Date(userForEdit.birth_date));\n      setJob(userForEdit.job);\n      setBiography(userForEdit.biography);\n      setIsActive(userForEdit.is_active);\n    }\n  }, []);\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        sx={{\n          '& .MuiTextField-root': { m: 1, width: '300px' },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handlerForm}\n      >\n        <h1 className=\"title\">\n          {!currentMode ? 'Edit User' : 'Add User'}\n        </h1>\n        <div className=\"wrapper\">\n          <TextField\n            error={isErrorFirstName}\n            required\n            id=\"outlined-required\"\n            label=\"First Name\"\n            placeholder=\"First Name\"\n            helperText={isErrorFirstName ? 'Use only a-zA-Z' : ''}\n            inputProps={{ maxLength: 256 }}\n            value={firstName}\n            onChange={(event) => {\n              handleChangeFirstName(event.target.value);\n            }}\n          />\n          <TextField\n            error={isErrorLastName}\n            required\n            id=\"outlined-required\"\n            label=\"Last Name\"\n            placeholder=\"Last Name\"\n            helperText={isErrorLastName ? 'Use only a-zA-Z' : ''}\n            inputProps={{ maxLength: 256 }}\n            value={lastName}\n            onChange={(event) => {\n              handleChangeLastName(event.target.value);\n            }}\n          />\n\n          <LocalizationProvider\n            dateAdapter={AdapterDateFns}\n          >\n            <Stack spacing={3}>\n              <DatePicker\n                disableFuture\n                label=\"Birth Date\"\n                mask=\"____-__-__\"\n                inputFormat=\"yyyy-MM-dd\"\n                openTo=\"year\"\n                views={['year', 'month', 'day']}\n                value={value}\n                onChange={(newValue: React.SetStateAction<Date | null>) => {\n                  setValue(newValue);\n                }}\n                renderInput={(\n                  params: JSX.IntrinsicAttributes & TextFieldProps,\n                ) => <TextField {...params} />}\n              />\n            </Stack>\n          </LocalizationProvider>\n\n          <Box>\n            <FormControl\n              sx={{ m: 1, width: 300 }}\n            >\n              <InputLabel\n                required\n                id=\"demo-simple-select-label\"\n              >\n                Gender\n              </InputLabel>\n              <Select\n                error={isErrorSex}\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={sex}\n                label={isErrorSex ? 'You should choose a gender' : 'Gender*'}\n                onChange={handleChangeGender}\n              >\n                <MenuItem value=\"male\">male</MenuItem>\n                <MenuItem value=\"female\">female</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n\n          <TextField\n            error={isErrorJob}\n            required\n            id=\"outlined-required\"\n            label=\"Job\"\n            placeholder=\"Job\"\n            inputProps={{ maxLength: 256 }}\n            helperText={isErrorJob ? 'You have used wrong symbol' : ''}\n            value={job}\n            onChange={(event) => {\n              handleChangeJob(event.target.value);\n            }}\n          />\n          <TextField\n            error={isErrorBiography}\n            required\n            id=\"outlined-multiline-static\"\n            label=\"Biography\"\n            multiline\n            rows={6}\n            placeholder=\"Biography\"\n            helperText={isErrorBiography ? 'You have used wrong symbol' : ''}\n            inputProps={{ maxLength: 1024 }}\n            value={biography}\n            onChange={(event) => {\n              handleChangeBiography(event.target.value);\n            }}\n          />\n\n          <Stack spacing={2} direction=\"row\" sx={{ m: 1 }}>\n            <FormControlLabel\n              control={<Checkbox {...label} />}\n              label=\"is Active\"\n              onChange={() => {\n                setIsActive(!isActive);\n              }}\n            />\n          </Stack>\n\n          <Stack spacing={2} direction=\"row\" sx={{ m: 1 }}>\n            <Button\n              variant=\"outlined\"\n              type=\"submit\"\n              disabled={!currentMode}\n            >\n              Add New User\n            </Button>\n          </Stack>\n          <Stack spacing={2} direction=\"row\" sx={{ m: 1 }}>\n            <Button\n              variant=\"outlined\"\n              type=\"button\"\n              disabled={currentMode}\n              onClick={() => {\n                if (userForEdit) {\n                  updateUser(\n                    userForEdit.id,\n                    firstName,\n                    lastName,\n                    transformDate(value),\n                    sex,\n                    job,\n                    biography,\n                    isActive,\n                  );\n                  setIsEditedUser(true);\n                }\n              }}\n            >\n              Edit User\n            </Button>\n          </Stack>\n          {isErrorForm && (\n            <Stack sx={{ m: 1, width: 300 }} spacing={2}>\n              <Alert variant=\"filled\" severity=\"error\">\n                Form filled wrong!\n              </Alert>\n            </Stack>\n          ) }\n\n          {isCreatedUser && (\n            <Stack sx={{ m: 1, width: 300 }} spacing={2}>\n              <Alert variant=\"filled\" severity=\"success\">\n                User was created successfully!\n              </Alert>\n            </Stack>\n          ) }\n\n          {isEditedUser && (\n            <Stack sx={{ m: 1, width: 300 }} spacing={2}>\n              <Alert variant=\"filled\" severity=\"success\">\n                Updated successfully!\n              </Alert>\n            </Stack>\n          ) }\n\n        </div>\n\n      </Box>\n\n    </>\n  );\n}\n","import { Routes, Route } from 'react-router-dom';\nimport './App.scss';\nimport React from 'react';\nimport { Users } from './components/Users';\nimport { User } from './components/User';\nimport { EditUser } from './components/EditUser';\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Users />} />\n        <Route path=\"/users\" element={<Users />} />\n        <Route path=\"/user\" element={<User />} />\n        <Route path=\"/addedituser\" element={<EditUser />} />\n      </Routes>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}